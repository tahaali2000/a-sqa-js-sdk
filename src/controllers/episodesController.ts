/**
 * Spotify Web API with fixes and improvements from sonalluxLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import { ApiResponse, RequestOptions } from '../core';
import { EpisodeObject, episodeObjectSchema } from '../models/episodeObject';
import { ManyEpisodes, manyEpisodesSchema } from '../models/manyEpisodes';
import {
  MeEpisodesRequest,
  meEpisodesRequestSchema,
} from '../models/meEpisodesRequest';
import {
  MeEpisodesRequest1,
  meEpisodesRequest1Schema,
} from '../models/meEpisodesRequest1';
import {
  PagingSavedEpisodeObject,
  pagingSavedEpisodeObjectSchema,
} from '../models/pagingSavedEpisodeObject';
import { array, boolean, number, optional, string } from '../schema';
import { BaseController } from './baseController';
import { ForbiddenError } from '../errors/forbiddenError';
import { TooManyRequestsError } from '../errors/tooManyRequestsError';
import { UnauthorizedError } from '../errors/unauthorizedError';

export class EpisodesController extends BaseController {
  /**
   * Get Spotify catalog information for a single episode identified by its
   * unique Spotify ID.
   *
   *
   * @param id
   * @param market
   * @return Response from the API call


   */
  async getAnEpisode(
    id: string,
    market?: string,
    requestOptions?: RequestOptions
  ): Promise<ApiResponse<EpisodeObject>> {
    const req = this.createRequest('GET');
    const mapped = req.prepareArgs({
      id: [id, string()],
      market: [market, optional(string())],
    });
    req.query('market', mapped.market);
    req.appendTemplatePath`/episodes/${mapped.id}`;
    req.throwOn(
      401,
      UnauthorizedError,
      'Bad or expired token. This can happen if the user revoked a token or\nthe access token has expired. You should re-authenticate the user.\n'
    );
    req.throwOn(
      403,
      ForbiddenError,
      "Bad OAuth request (wrong consumer key, bad nonce, expired\ntimestamp...). Unfortunately, re-authenticating the user won't help here.\n"
    );
    req.throwOn(
      429,
      TooManyRequestsError,
      'The app has exceeded its rate limits.\n'
    );
    req.authenticate([{ oauth20: true }]);
    return req.callAsJson(episodeObjectSchema, requestOptions);
  }

  /**
   * Get Spotify catalog information for several episodes based on their Spotify IDs.
   *
   *
   * @param ids
   * @param market
   * @return Response from the API call


   */
  async getMultipleEpisodes(
    ids: string,
    market?: string,
    requestOptions?: RequestOptions
  ): Promise<ApiResponse<ManyEpisodes>> {
    const req = this.createRequest('GET', '/episodes');
    const mapped = req.prepareArgs({
      ids: [ids, string()],
      market: [market, optional(string())],
    });
    req.query('ids', mapped.ids);
    req.query('market', mapped.market);
    req.throwOn(
      401,
      UnauthorizedError,
      'Bad or expired token. This can happen if the user revoked a token or\nthe access token has expired. You should re-authenticate the user.\n'
    );
    req.throwOn(
      403,
      ForbiddenError,
      "Bad OAuth request (wrong consumer key, bad nonce, expired\ntimestamp...). Unfortunately, re-authenticating the user won't help here.\n"
    );
    req.throwOn(
      429,
      TooManyRequestsError,
      'The app has exceeded its rate limits.\n'
    );
    req.authenticate([{ oauth20: true }]);
    return req.callAsJson(manyEpisodesSchema, requestOptions);
  }

  /**
   * Get a list of the episodes saved in the current Spotify user's library.<br/>
   * This API endpoint is in __beta__ and could change without warning. Please share any feedback that
   * you have, or issues that you discover, in our [developer community forum](https://community.spotify.
   * com/t5/Spotify-for-Developers/bd-p/Spotify_Developer).
   *
   *
   * @param market
   * @param limit  Example: 20
   * @param offset Example: 0
   * @return Response from the API call


   */
  async getUsersSavedEpisodes(
    market?: string,
    limit?: number,
    offset?: number,
    requestOptions?: RequestOptions
  ): Promise<ApiResponse<PagingSavedEpisodeObject>> {
    const req = this.createRequest('GET', '/me/episodes');
    const mapped = req.prepareArgs({
      market: [market, optional(string())],
      limit: [limit, optional(number())],
      offset: [offset, optional(number())],
    });
    req.query('market', mapped.market);
    req.query('limit', mapped.limit);
    req.query('offset', mapped.offset);
    req.throwOn(
      401,
      UnauthorizedError,
      'Bad or expired token. This can happen if the user revoked a token or\nthe access token has expired. You should re-authenticate the user.\n'
    );
    req.throwOn(
      403,
      ForbiddenError,
      "Bad OAuth request (wrong consumer key, bad nonce, expired\ntimestamp...). Unfortunately, re-authenticating the user won't help here.\n"
    );
    req.throwOn(
      429,
      TooManyRequestsError,
      'The app has exceeded its rate limits.\n'
    );
    req.authenticate([{ oauth20: true }]);
    return req.callAsJson(pagingSavedEpisodeObjectSchema, requestOptions);
  }

  /**
   * Save one or more episodes to the current user's library.<br/>
   * This API endpoint is in __beta__ and could change without warning. Please share any feedback that
   * you have, or issues that you discover, in our [developer community forum](https://community.spotify.
   * com/t5/Spotify-for-Developers/bd-p/Spotify_Developer).
   *
   *
   * @param ids
   * @param body
   * @return Response from the API call


   */
  async saveEpisodesUser(
    ids: string,
    body?: MeEpisodesRequest,
    requestOptions?: RequestOptions
  ): Promise<ApiResponse<void>> {
    const req = this.createRequest('PUT', '/me/episodes');
    const mapped = req.prepareArgs({
      ids: [ids, string()],
      body: [body, optional(meEpisodesRequestSchema)],
    });
    req.header('Content-Type', 'application/json');
    req.query('ids', mapped.ids);
    req.json(mapped.body);
    req.throwOn(
      401,
      UnauthorizedError,
      'Bad or expired token. This can happen if the user revoked a token or\nthe access token has expired. You should re-authenticate the user.\n'
    );
    req.throwOn(
      403,
      ForbiddenError,
      "Bad OAuth request (wrong consumer key, bad nonce, expired\ntimestamp...). Unfortunately, re-authenticating the user won't help here.\n"
    );
    req.throwOn(
      429,
      TooManyRequestsError,
      'The app has exceeded its rate limits.\n'
    );
    req.authenticate([{ oauth20: true }]);
    return req.call(requestOptions);
  }

  /**
   * Remove one or more episodes from the current user's library.<br/>
   * This API endpoint is in __beta__ and could change without warning. Please share any feedback that
   * you have, or issues that you discover, in our [developer community forum](https://community.spotify.
   * com/t5/Spotify-for-Developers/bd-p/Spotify_Developer).
   *
   *
   * @param ids
   * @param body
   * @return Response from the API call


   */
  async removeEpisodesUser(
    ids: string,
    body?: MeEpisodesRequest1,
    requestOptions?: RequestOptions
  ): Promise<ApiResponse<void>> {
    const req = this.createRequest('DELETE', '/me/episodes');
    const mapped = req.prepareArgs({
      ids: [ids, string()],
      body: [body, optional(meEpisodesRequest1Schema)],
    });
    req.header('Content-Type', 'application/json');
    req.query('ids', mapped.ids);
    req.json(mapped.body);
    req.throwOn(
      401,
      UnauthorizedError,
      'Bad or expired token. This can happen if the user revoked a token or\nthe access token has expired. You should re-authenticate the user.\n'
    );
    req.throwOn(
      403,
      ForbiddenError,
      "Bad OAuth request (wrong consumer key, bad nonce, expired\ntimestamp...). Unfortunately, re-authenticating the user won't help here.\n"
    );
    req.throwOn(
      429,
      TooManyRequestsError,
      'The app has exceeded its rate limits.\n'
    );
    req.authenticate([{ oauth20: true }]);
    return req.call(requestOptions);
  }

  /**
   * Check if one or more episodes is already saved in the current Spotify user's 'Your Episodes' library.
   * <br/>
   * This API endpoint is in __beta__ and could change without warning. Please share any feedback that
   * you have, or issues that you discover, in our [developer community forum](https://community.spotify.
   * com/t5/Spotify-for-Developers/bd-p/Spotify_Developer)..
   *
   *
   * @param ids
   * @return Response from the API call


   */
  async checkUsersSavedEpisodes(
    ids: string,
    requestOptions?: RequestOptions
  ): Promise<ApiResponse<boolean[]>> {
    const req = this.createRequest('GET', '/me/episodes/contains');
    const mapped = req.prepareArgs({ ids: [ids, string()] });
    req.query('ids', mapped.ids);
    req.throwOn(
      401,
      UnauthorizedError,
      'Bad or expired token. This can happen if the user revoked a token or\nthe access token has expired. You should re-authenticate the user.\n'
    );
    req.throwOn(
      403,
      ForbiddenError,
      "Bad OAuth request (wrong consumer key, bad nonce, expired\ntimestamp...). Unfortunately, re-authenticating the user won't help here.\n"
    );
    req.throwOn(
      429,
      TooManyRequestsError,
      'The app has exceeded its rate limits.\n'
    );
    req.authenticate([{ oauth20: true }]);
    return req.callAsJson(array(boolean()), requestOptions);
  }
}
