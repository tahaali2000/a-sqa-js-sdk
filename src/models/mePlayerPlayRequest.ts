/**
 * Spotify Web API with fixes and improvements from sonalluxLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import {
  array,
  number,
  object,
  optional,
  Schema,
  string,
  unknown,
} from '../schema';

export interface MePlayerPlayRequest {
  /**
   * Optional. Spotify URI of the context to play.
   * Valid contexts are albums, artists & playlists.
   * `{context_uri:"spotify:album:1Je1IMUlBXcx1Fz0WE7oPT"}`
   */
  contextUri?: string;
  /**
   * Optional. A JSON array of the Spotify track URIs to play.
   * For example: `{"uris": ["spotify:track:4iV5W9uYEdYUVa79Axb7Rh", "spotify:track:1301WleyT98MSxVHPZCA6M"]}`
   */
  uris?: string[];
  /**
   * Optional. Indicates from where in the context playback should start. Only available when context_uri corresponds to an album or playlist object
   * "position" is zero based and canâ€™t be negative. Example: `"offset": {"position": 5}`
   * "uri" is a string representing the uri of the item to start at. Example: `"offset": {"uri": "spotify:track:1301WleyT98MSxVHPZCA6M"}`
   */
  offset?: unknown;
  /** Indicates from what position to start playback. Must be a positive number. Passing in a position that is greater than the length of the track will cause the player to start playing the next song. */
  positionMs?: number;
}

export const mePlayerPlayRequestSchema: Schema<MePlayerPlayRequest> = object({
  contextUri: ['context_uri', optional(string())],
  uris: ['uris', optional(array(string()))],
  offset: ['offset', optional(unknown())],
  positionMs: ['position_ms', optional(number())],
});
