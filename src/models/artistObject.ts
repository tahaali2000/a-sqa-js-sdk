/**
 * Spotify Web API with fixes and improvements from sonalluxLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import {
  array,
  lazy,
  number,
  object,
  optional,
  Schema,
  string,
} from '../schema';
import {
  ExternalUrlObject,
  externalUrlObjectSchema,
} from './externalUrlObject';
import { FollowersObject, followersObjectSchema } from './followersObject';
import { ImageObject, imageObjectSchema } from './imageObject';
import { TypeEnum, typeEnumSchema } from './typeEnum';

export interface ArtistObject {
  /** Known external URLs for this artist. */
  externalUrls?: ExternalUrlObject;
  /** Information about the followers of the artist. */
  followers?: FollowersObject;
  /** A list of the genres the artist is associated with. If not yet classified, the array is empty. */
  genres?: string[];
  /** A link to the Web API endpoint providing full details of the artist. */
  href?: string;
  /** The [Spotify ID](/documentation/web-api/concepts/spotify-uris-ids) for the artist. */
  id?: string;
  /** Images of the artist in various sizes, widest first. */
  images?: ImageObject[];
  /** The name of the artist. */
  name?: string;
  /** The popularity of the artist. The value will be between 0 and 100, with 100 being the most popular. The artist's popularity is calculated from the popularity of all the artist's tracks. */
  popularity?: number;
  /** The object type. */
  type?: TypeEnum;
  /** The [Spotify URI](/documentation/web-api/concepts/spotify-uris-ids) for the artist. */
  uri?: string;
}

export const artistObjectSchema: Schema<ArtistObject> = object({
  externalUrls: [
    'external_urls',
    optional(lazy(() => externalUrlObjectSchema)),
  ],
  followers: ['followers', optional(lazy(() => followersObjectSchema))],
  genres: ['genres', optional(array(string()))],
  href: ['href', optional(string())],
  id: ['id', optional(string())],
  images: ['images', optional(array(lazy(() => imageObjectSchema)))],
  name: ['name', optional(string())],
  popularity: ['popularity', optional(number())],
  type: ['type', optional(typeEnumSchema)],
  uri: ['uri', optional(string())],
});
