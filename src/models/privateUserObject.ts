/**
 * Spotify Web API with fixes and improvements from sonalluxLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import { array, lazy, object, optional, Schema, string } from '../schema';
import {
  ExplicitContentSettingsObject,
  explicitContentSettingsObjectSchema,
} from './explicitContentSettingsObject';
import {
  ExternalUrlObject,
  externalUrlObjectSchema,
} from './externalUrlObject';
import { FollowersObject, followersObjectSchema } from './followersObject';
import { ImageObject, imageObjectSchema } from './imageObject';

export interface PrivateUserObject {
  /** The country of the user, as set in the user's account profile. An [ISO 3166-1 alpha-2 country code](http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2). _This field is only available when the current user has granted access to the [user-read-private](/documentation/web-api/concepts/scopes/#list-of-scopes) scope._ */
  country?: string;
  /** The name displayed on the user's profile. `null` if not available. */
  displayName?: string;
  /** The user's email address, as entered by the user when creating their account. _**Important!** This email address is unverified; there is no proof that it actually belongs to the user._ _This field is only available when the current user has granted access to the [user-read-email](/documentation/web-api/concepts/scopes/#list-of-scopes) scope._ */
  email?: string;
  /** The user's explicit content settings. _This field is only available when the current user has granted access to the [user-read-private](/documentation/web-api/concepts/scopes/#list-of-scopes) scope._ */
  explicitContent?: ExplicitContentSettingsObject;
  /** Known external URLs for this user. */
  externalUrls?: ExternalUrlObject;
  /** Information about the followers of the user. */
  followers?: FollowersObject;
  /** A link to the Web API endpoint for this user. */
  href?: string;
  /** The [Spotify user ID](/documentation/web-api/concepts/spotify-uris-ids) for the user. */
  id?: string;
  /** The user's profile image. */
  images?: ImageObject[];
  /** The user's Spotify subscription level: "premium", "free", etc. (The subscription level "open" can be considered the same as "free".) _This field is only available when the current user has granted access to the [user-read-private](/documentation/web-api/concepts/scopes/#list-of-scopes) scope._ */
  product?: string;
  /** The object type: "user" */
  type?: string;
  /** The [Spotify URI](/documentation/web-api/concepts/spotify-uris-ids) for the user. */
  uri?: string;
}

export const privateUserObjectSchema: Schema<PrivateUserObject> = object({
  country: ['country', optional(string())],
  displayName: ['display_name', optional(string())],
  email: ['email', optional(string())],
  explicitContent: [
    'explicit_content',
    optional(lazy(() => explicitContentSettingsObjectSchema)),
  ],
  externalUrls: [
    'external_urls',
    optional(lazy(() => externalUrlObjectSchema)),
  ],
  followers: ['followers', optional(lazy(() => followersObjectSchema))],
  href: ['href', optional(string())],
  id: ['id', optional(string())],
  images: ['images', optional(array(lazy(() => imageObjectSchema)))],
  product: ['product', optional(string())],
  type: ['type', optional(string())],
  uri: ['uri', optional(string())],
});
