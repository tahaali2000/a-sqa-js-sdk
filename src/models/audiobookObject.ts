/**
 * Spotify Web API with fixes and improvements from sonalluxLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import {
  array,
  boolean,
  lazy,
  number,
  object,
  optional,
  Schema,
  string,
} from '../schema';
import { AuthorObject, authorObjectSchema } from './authorObject';
import { CopyrightObject, copyrightObjectSchema } from './copyrightObject';
import {
  ExternalUrlObject,
  externalUrlObjectSchema,
} from './externalUrlObject';
import { ImageObject, imageObjectSchema } from './imageObject';
import { NarratorObject, narratorObjectSchema } from './narratorObject';
import {
  PagingSimplifiedChapterObject,
  pagingSimplifiedChapterObjectSchema,
} from './pagingSimplifiedChapterObject';

export interface AudiobookObject {
  /** The author(s) for the audiobook. */
  authors: AuthorObject[];
  /** A list of the countries in which the audiobook can be played, identified by their [ISO 3166-1 alpha-2](http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) code. */
  availableMarkets: string[];
  /** The copyright statements of the audiobook. */
  copyrights: CopyrightObject[];
  /** A description of the audiobook. HTML tags are stripped away from this field, use `html_description` field in case HTML tags are needed. */
  description: string;
  /** A description of the audiobook. This field may contain HTML tags. */
  htmlDescription: string;
  /** The edition of the audiobook. */
  edition?: string;
  /** Whether or not the audiobook has explicit content (true = yes it does; false = no it does not OR unknown). */
  explicit: boolean;
  /** External URLs for this audiobook. */
  externalUrls: ExternalUrlObject;
  /** A link to the Web API endpoint providing full details of the audiobook. */
  href: string;
  /** The [Spotify ID](/documentation/web-api/concepts/spotify-uris-ids) for the audiobook. */
  id: string;
  /** The cover art for the audiobook in various sizes, widest first. */
  images: ImageObject[];
  /** A list of the languages used in the audiobook, identified by their [ISO 639](https://en.wikipedia.org/wiki/ISO_639) code. */
  languages: string[];
  /** The media type of the audiobook. */
  mediaType: string;
  /** The name of the audiobook. */
  name: string;
  /** The narrator(s) for the audiobook. */
  narrators: NarratorObject[];
  /** The publisher of the audiobook. */
  publisher: string;
  /** The object type. */
  type: string;
  /** The [Spotify URI](/documentation/web-api/concepts/spotify-uris-ids) for the audiobook. */
  uri: string;
  /** The number of chapters in this audiobook. */
  totalChapters: number;
  /** The chapters of the audiobook. */
  chapters: PagingSimplifiedChapterObject;
}

export const audiobookObjectSchema: Schema<AudiobookObject> = object({
  authors: ['authors', array(lazy(() => authorObjectSchema))],
  availableMarkets: ['available_markets', array(string())],
  copyrights: ['copyrights', array(lazy(() => copyrightObjectSchema))],
  description: ['description', string()],
  htmlDescription: ['html_description', string()],
  edition: ['edition', optional(string())],
  explicit: ['explicit', boolean()],
  externalUrls: ['external_urls', lazy(() => externalUrlObjectSchema)],
  href: ['href', string()],
  id: ['id', string()],
  images: ['images', array(lazy(() => imageObjectSchema))],
  languages: ['languages', array(string())],
  mediaType: ['media_type', string()],
  name: ['name', string()],
  narrators: ['narrators', array(lazy(() => narratorObjectSchema))],
  publisher: ['publisher', string()],
  type: ['type', string()],
  uri: ['uri', string()],
  totalChapters: ['total_chapters', number()],
  chapters: ['chapters', lazy(() => pagingSimplifiedChapterObjectSchema)],
});
