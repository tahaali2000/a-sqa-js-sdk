/**
 * Spotify Web API with fixes and improvements from sonalluxLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import {
  array,
  lazy,
  number,
  object,
  optional,
  Schema,
  string,
} from '../schema';
import {
  AlbumRestrictionObject,
  albumRestrictionObjectSchema,
} from './albumRestrictionObject';
import { AlbumTypeEnum, albumTypeEnumSchema } from './albumTypeEnum';
import {
  ExternalUrlObject,
  externalUrlObjectSchema,
} from './externalUrlObject';
import { ImageObject, imageObjectSchema } from './imageObject';
import {
  ReleaseDatePrecisionEnum,
  releaseDatePrecisionEnumSchema,
} from './releaseDatePrecisionEnum';
import {
  SimplifiedArtistObject,
  simplifiedArtistObjectSchema,
} from './simplifiedArtistObject';

export interface SimplifiedAlbumObject {
  /** The type of the album. */
  albumType: AlbumTypeEnum;
  /** The number of tracks in the album. */
  totalTracks: number;
  /** The markets in which the album is available: [ISO 3166-1 alpha-2 country codes](http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2). _**NOTE**: an album is considered available in a market when at least 1 of its tracks is available in that market._ */
  availableMarkets: string[];
  /** Known external URLs for this album. */
  externalUrls: ExternalUrlObject;
  /** A link to the Web API endpoint providing full details of the album. */
  href: string;
  /** The [Spotify ID](/documentation/web-api/concepts/spotify-uris-ids) for the album. */
  id: string;
  /** The cover art for the album in various sizes, widest first. */
  images: ImageObject[];
  /** The name of the album. In case of an album takedown, the value may be an empty string. */
  name: string;
  /** The date the album was first released. */
  releaseDate: string;
  /** The precision with which `release_date` value is known. */
  releaseDatePrecision: ReleaseDatePrecisionEnum;
  /** Included in the response when a content restriction is applied. */
  restrictions?: AlbumRestrictionObject;
  /** The object type. */
  type: string;
  /** The [Spotify URI](/documentation/web-api/concepts/spotify-uris-ids) for the album. */
  uri: string;
  /** The artists of the album. Each artist object includes a link in `href` to more detailed information about the artist. */
  artists: SimplifiedArtistObject[];
}

export const simplifiedAlbumObjectSchema: Schema<SimplifiedAlbumObject> = object(
  {
    albumType: ['album_type', albumTypeEnumSchema],
    totalTracks: ['total_tracks', number()],
    availableMarkets: ['available_markets', array(string())],
    externalUrls: ['external_urls', lazy(() => externalUrlObjectSchema)],
    href: ['href', string()],
    id: ['id', string()],
    images: ['images', array(lazy(() => imageObjectSchema))],
    name: ['name', string()],
    releaseDate: ['release_date', string()],
    releaseDatePrecision: [
      'release_date_precision',
      releaseDatePrecisionEnumSchema,
    ],
    restrictions: [
      'restrictions',
      optional(lazy(() => albumRestrictionObjectSchema)),
    ],
    type: ['type', string()],
    uri: ['uri', string()],
    artists: ['artists', array(lazy(() => simplifiedArtistObjectSchema))],
  }
);
